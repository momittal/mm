/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.PDCPrimaryDoctorRole;

import Business.PatientAttributes.PDCVisit;
import Business.PatientAttributes.VitalSigns;
import Business.UserAccount.UserAccount;
import static Business.Utils.Methods.vitalSignsStatusChecker;
import Business.WorkQueue.RequestPDCNursePDCPrimaryDoctor;
import Business.WorkQueue.RequestPatientPDCReceptionist;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Mohit
 */
public class PDCPrimaryDoctorProcessJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private RequestPDCNursePDCPrimaryDoctor request7;
    private UserAccount userAccount;
    private PDCPrimaryDoctorWorkAreaJPanel pdcpdwajp;

    /**
     * Creates new form PDCPrimaryDoctorProcessJPanel
     */
    public PDCPrimaryDoctorProcessJPanel(JPanel userProcessContainer, RequestPDCNursePDCPrimaryDoctor request7, UserAccount userAccount, PDCPrimaryDoctorWorkAreaJPanel pdcpdwajp) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.request7 = request7;
        this.pdcpdwajp = pdcpdwajp;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        releasePatientBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        feedbackTxtArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        releasePatientBtn.setText("Release Patient");
        releasePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                releasePatientBtnActionPerformed(evt);
            }
        });

        feedbackTxtArea.setColumns(20);
        feedbackTxtArea.setRows(5);
        jScrollPane1.setViewportView(feedbackTxtArea);

        jLabel1.setText("FeedBack");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(207, 207, 207)
                        .addComponent(releasePatientBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addGap(207, 207, 207))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(releasePatientBtn))
                .addGap(334, 334, 334))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        pdcpdwajp.populateTable();
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backBtnActionPerformed

    private void releasePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_releasePatientBtnActionPerformed
        // TODO add your handling code here:
        if (feedbackTxtArea.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Leave a Feedback");
            return;
        } else {
            PDCVisit pdcVisit = request7.getPatient().getPdcVisitHistory().addPDCVisit();
            pdcVisit.setPrimaryDoctorfeedback(feedbackTxtArea.getText());
            
            request7.setMessage("Patient treated by doctor");
            request7.setStatus("Visit Complete");
            WorkRequest lastRequest = null;
            for (WorkRequest request5 : request7.getPatient().getUserAccount().getWorkQueue().getWorkRequestList()) {
                if (request5 instanceof RequestPatientPDCReceptionist) {
                    lastRequest = request5;
                }
            }
            if (lastRequest != null) {
                lastRequest.setStatus("Visit Complete");
            }
        }
        JOptionPane.showMessageDialog(null, "Visit Complete");
        VitalSigns vitalSigns = request7.getPatient().getVitalSignsHistory().addVitalSigns();
        vitalSigns.setRespiratoryRate(20);
        vitalSigns.setHeartRate(72);
        vitalSigns.setSystolicBloodPressure(90);
        vitalSigns.setWeightInKg(80);
        vitalSigns.setEcg(48);
        vitalSigns.setTimeStamp(new Date());
        vitalSigns.setStatus(vitalSignsStatusChecker(48));
    }//GEN-LAST:event_releasePatientBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextArea feedbackTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton releasePatientBtn;
    // End of variables declaration//GEN-END:variables
}
