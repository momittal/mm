/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdmin;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohit
 */
public class ManageUserAccountsJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem system;
    /**
     * Creates new form ManageUserAccountsJPanel
     */
    public ManageUserAccountsJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        populateUserAccountsTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userAccountsTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        removeUserbtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        userAccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "UserName", "Organization", "Enterprise", "Network"
            }
        ));
        jScrollPane1.setViewportView(userAccountsTable);

        backJButton.setText(" Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeUserbtn.setText("Remove User");
        removeUserbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeUserbtn)))
                .addGap(179, 179, 179))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(removeUserbtn))
                .addGap(83, 83, 83))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeUserbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserbtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = userAccountsTable.getSelectedRow();
        if(selectedRow<0){
            return;
        }
        else{
            Employee emp = (Employee)userAccountsTable.getValueAt(selectedRow, 0);
            Organization org = (Organization) userAccountsTable.getValueAt(selectedRow, 2);
            UserAccount ua = emp.getUserAccount();
            org.getEmployeeDirectory().removeEmployee(emp);
            org.getUserAccountDirectory().removeUserAcocunt(ua);
            JOptionPane.showMessageDialog(null,"Removed");
            populateUserAccountsTable();
        }
    }//GEN-LAST:event_removeUserbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeUserbtn;
    private javax.swing.JTable userAccountsTable;
    // End of variables declaration//GEN-END:variables

    private void populateUserAccountsTable() {
        DefaultTableModel dtm = (DefaultTableModel) userAccountsTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[5];
        
        for(Network network: system.getNetworkList()){
            for(Enterprise enterprise: network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
                    for(Employee employee: organization.getEmployeeDirectory().getEmployeeList()){
                        row[0] = employee;
                        row[1] = employee.getUserAccount();
                        row[2] = organization;
                        row[3] = enterprise;
                        row[4] = network;
                        dtm.addRow(row);
                    }
                }
            }
        }
    }
}
