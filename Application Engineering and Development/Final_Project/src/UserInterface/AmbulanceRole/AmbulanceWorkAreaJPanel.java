/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.AmbulanceRole;

import Business.Employee.Employee;
import Business.Employee.Patient;
import Business.Enterprise.EmergencyRoomEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.PatientAttributes.ERVisit;
import Business.PatientAttributes.VitalSigns;
import Business.UserAccount.UserAccount;
import Business.Utils.Methods;
import Business.WorkQueue.RequestPatientAmbulance;
import Business.WorkQueue.WorkRequest;
import UserInterface.Patient.PatientCallAmbulanceJPanel;
import java.awt.CardLayout;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohit
 */
public class AmbulanceWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Network network;
    private Employee ambulance;

    /**
     * Creates new form AmbulanceWorkAreaJPanel
     */
    public AmbulanceWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.organization = organization;
        this.network = network;
        this.ambulance = userAccount.getEmployee();
        ambulanceTxtField.setText(ambulance.getName());
        populateRequestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ambulance = new javax.swing.JLabel();
        ambulanceTxtField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ambulanceWorkRequestTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        pickUpPatientBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        Ambulance.setText("Ambulance");

        ambulanceTxtField.setEditable(false);

        ambulanceWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Status", "Time Stamp", "Patient Object"
            }
        ));
        jScrollPane1.setViewportView(ambulanceWorkRequestTable);

        jLabel2.setText("Ambulance Work Area ");

        pickUpPatientBtn.setText("Pick Up Patient");
        pickUpPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickUpPatientBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Ambulance)
                        .addGap(34, 34, 34)
                        .addComponent(ambulanceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(pickUpPatientBtn)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(125, 125, 125))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ambulance)
                    .addComponent(ambulanceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pickUpPatientBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pickUpPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickUpPatientBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = ambulanceWorkRequestTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        } else {
            String status = (String) ambulanceWorkRequestTable.getValueAt(selectedRow, 1);
            
            
            if (status.equalsIgnoreCase("Ambulance Called by Patient") || status.equalsIgnoreCase("Picked Up By Ambulance" )) {
                WorkRequest request =(WorkRequest) ambulanceWorkRequestTable.getModel().getValueAt(selectedRow, 0);
                request.setStatus("Picked Up By Ambulance");
                Patient patient = (Patient) ambulanceWorkRequestTable.getModel().getValueAt(selectedRow, 3);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                userProcessContainer.add("AmbulanceDropPatientToHospitalJPanel", new AmbulanceDropPatientToHospitalJPanel(userProcessContainer, userAccount, organization, network, patient,this));
                layout.next(userProcessContainer);
            } else {
                JOptionPane.showMessageDialog(null, "Unable To Process! \nPlease Select Correct Patient");
            }
        }


    }//GEN-LAST:event_pickUpPatientBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ambulance;
    private javax.swing.JTextField ambulanceTxtField;
    private javax.swing.JTable ambulanceWorkRequestTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pickUpPatientBtn;
    // End of variables declaration//GEN-END:variables

    public void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) ambulanceWorkRequestTable.getModel();
        dtm.setRowCount(0);
        Object row[] = new Object[4];

        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            if (request instanceof RequestPatientAmbulance){
                row[0] = request;
            row[1] = request.getStatus();
            row[2] = request.getRequestDate();
            row[3] = (Patient)request.getSender().getEmployee();
            
            dtm.addRow(row);
            }
            
        }
        if(ambulanceWorkRequestTable.getColumnModel().getColumnCount() > 3){
        ambulanceWorkRequestTable.removeColumn(ambulanceWorkRequestTable.getColumnModel().getColumn(3));   
        }
        /*
        if (dtm.getRowCount() > 0) {
            
            Methods.arrangeTableInAscending(ambulanceWorkRequestTable,2);
            ambulanceWorkRequestTable.setRowSelectionInterval(0, 0);
        }*/
    }

}
