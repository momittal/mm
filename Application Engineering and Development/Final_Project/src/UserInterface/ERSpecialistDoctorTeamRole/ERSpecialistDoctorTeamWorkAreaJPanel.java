/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ERSpecialistDoctorTeamRole;

import Business.Employee.Patient;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.RequestERCoordinatorERSpecialist;
import Business.WorkQueue.RequestPatientAmbulance;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mohit
 */
public class ERSpecialistDoctorTeamWorkAreaJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    /**
     * Creates new form ERGeneralDoctorTeamWorkAreaJPanel
     */
    public ERSpecialistDoctorTeamWorkAreaJPanel(JPanel userProcessContainer,UserAccount account,Organization organization,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.organization = organization;
        populateTable();
//        int size = userAccount.getWorkQueue().getWorkRequestList().size();
//        JOptionPane.showMessageDialog(null,"No of Work Requests is " + size);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        erSpecialistWorkRequestTable = new javax.swing.JTable();
        acceptPatient = new javax.swing.JButton();
        operatePatientBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        erSpecialistWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sender", "Patient", "Status"
            }
        ));
        jScrollPane1.setViewportView(erSpecialistWorkRequestTable);

        acceptPatient.setText("Accept Request");
        acceptPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptPatientActionPerformed(evt);
            }
        });

        operatePatientBtn.setText("Operate Patient");
        operatePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operatePatientBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(acceptPatient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(operatePatientBtn)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptPatient)
                    .addComponent(operatePatientBtn))
                .addGap(398, 398, 398))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptPatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = erSpecialistWorkRequestTable.getSelectedRow();
        if (selectedRow<0){
            return;
        }else{
            WorkRequest request3 = (WorkRequest) erSpecialistWorkRequestTable.getModel().getValueAt(selectedRow, 0);
             request3.setStatus("Doctor Team is Prepared To Operate");
             WorkRequest lastRequest = null;
             for (WorkRequest request : request3.getPatient().getUserAccount().getWorkQueue().getWorkRequestList()) {
                    if (request instanceof RequestPatientAmbulance) {
                        lastRequest= request;
                    }
                }
             if(lastRequest!= null){
                lastRequest.setStatus("Doctor Team is Prepared To Operate");
            }
             JOptionPane.showMessageDialog(null, "Doctor Team is Prepared To Operate");
             populateTable();
        }
        
    }//GEN-LAST:event_acceptPatientActionPerformed

    private void operatePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operatePatientBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = erSpecialistWorkRequestTable.getSelectedRow();
        if (selectedRow < 0) {
            return;
        } else {
            RequestERCoordinatorERSpecialist request3 = (RequestERCoordinatorERSpecialist) erSpecialistWorkRequestTable.getModel().getValueAt(selectedRow, 0);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("ERSpecialistOperationJPanel", new ERSpecialistOperationJPanel(userProcessContainer, userAccount, organization, enterprise, request3, this));
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_operatePatientBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptPatient;
    private javax.swing.JTable erSpecialistWorkRequestTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton operatePatientBtn;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) erSpecialistWorkRequestTable.getModel();
        dtm.setRowCount(0);
        Object[] row = new Object[3];
        for(WorkRequest request3: userAccount.getWorkQueue().getWorkRequestList()){
            row[0] = request3;
            row[1] = request3.getPatient();
            row[2] = request3.getStatus();
            dtm.addRow(row);
        }
    }
}
